#example
blueprint:
  name: Schneider Electric LG FUGA 550D6001 Ultimate (Z2M)
  description: Break free and use the press/hold/release actions from all 4 buttons triggered by LK FUGA 550D6001 switch.
  domain: automation
  author: Keviin Cosmos
  input:
    controller_entity:
      name: (Zigbee2MQTT) Controller Entity
      description: The action sensor of the controller to use for the automation.
      default: ""
      selector:
        entity:
          domain:
            - sensor
          multiple: false
    hold_delay:
      name: Hold delay
      description: If the button has been held more than the configured Hold delay, the corresponding held action is triggered.
      default: 1000
      selector:
        number:
          min: 100.0
          max: 5000.0
          unit_of_measurement: milliseconds
          mode: box
          step: 10.0
    top_left_pressed:
      - alias: If all lights are off, turn them on. Otherwise, turn them off.
        choose:
          - conditions:
              - condition: template
                value_template: >
                  {{ expand('light.kontor') | selectattr('state', 'eq', 'off') |
                  list | count == expand('light.kontor') | list | count }}
            sequence:
              - service: light.turn_on
                data: {}
                target:
                  entity_id: light.kontor
        default:
          - service: light.turn_off
            data: {}
            target:
              entity_id: light.kontor
    top_left_held:
      - service: scene.turn_on
        target:
          entity_id: scene.kontor_lys_standard
        metadata: {}
    top_left_released:
      name: 1. Top Left Released
      default: []
      selector:
        action: {}
    top_right_pressed:
      - alias: brightness steps
        service: light.turn_on
        target:
          entity_id: light.kontor
        data:
          brightness: >
            {% if is_state('light.kontor', 'on') and state_attr('light.kontor',
            'brightness') | int <= 42 %}
              120
            {% elif is_state('light.kontor', 'on') and 43 <=
            state_attr('light.kontor', 'brightness') | int <= 80 %}
              255
            {% elif is_state('light.kontor', 'on') and 
            state_attr('light.kontor', 'brightness') | int >= 81 %}
              40
            {% endif %}
    top_right_held:
       - alias: color temp steps
        service: light.turn_on
        target:
          entity_id: light.kontor
        data:
          color_temp: |
            {% if is_state('light.kontor', 'on') %}
              {% set current_temp = state_attr('light.kontor', 'color_temp') | int %}
              {% if current_temp <= 222 %}
                333
              {% elif 222 < current_temp <= 333 %}
                444
              {% else %}
                222
              {% endif %}
            {% endif %}
    top_right_released:
      name: 2. Top Right Released
      default: []
      selector:
        action: {}
    bottom_left_pressed:
      name: 3. Bottom Left Pressed
      default: []
      selector:
        action: {}
    bottom_left_held:
      name: 3. Bottom Left Held
      default: []
      selector:
        action: {}
    bottom_left_released:
      name: 3. Bottom Left Released
      default: []
      selector:
        action: {}
    bottom_right_pressed:
      name: 4. Bottom Right Pressed
      default: []
      selector:
        action: {}
    bottom_right_held:
      name: 4. Bottom Right Held
      default: []
      selector:
        action: {}
    bottom_right_released:
      name: 4. Bottom Right Released
      default: []
      selector:
        action: {}
  source_url: https://community.home-assistant.io/t/schneider-electric-lg-fuga-550d6001-ultimate-z2m/618022
mode: single
max_exceeded: silent
trigger:
  - platform: event
    event_type: state_changed
    event_data:
      entity_id: !input controller_entity
action:
  - variables:
      trigger_action: "{{ trigger.event.data.new_state.state }}"
  - choose:
      # Top Left Button
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'on_top' }}"
        sequence: !input top_left_pressed
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'brightness_move_up_top' }}"
        sequence: !input top_left_held
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'brightness_stop_top' }}"
        sequence: !input top_left_released

      # Top Right Button
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'off_top' }}"
        sequence: !input top_right_pressed
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'brightness_move_down_top' }}"
        sequence: !input top_right_held
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'brightness_stop_top' }}"
        sequence: !input top_right_released

      # Bottom Left Button
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'on_bottom' }}"
        sequence: !input bottom_left_pressed
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'brightness_move_up_bottom' }}"
        sequence: !input bottom_left_held
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'brightness_stop_bottom' }}"
        sequence: !input bottom_left_released

      # Bottom Right Button
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'off_bottom' }}"
        sequence: !input bottom_right_pressed
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'brightness_move_down_bottom' }}"
        sequence: !input bottom_right_held
      - conditions:
          - condition: template
            value_template: "{{ trigger_action == 'brightness_stop_bottom' }}"
        sequence: !input bottom_right_released
